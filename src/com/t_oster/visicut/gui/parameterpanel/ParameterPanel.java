/**
 * This file is part of VisiCut.
 * Copyright (C) 2011 - 2013 Thomas Oster <thomas.oster@rwth-aachen.de>
 * RWTH Aachen University - 52062 Aachen, Germany
 *
 *     VisiCut is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     VisiCut is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 *
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with VisiCut.  If not, see <http://www.gnu.org/licenses/>.
 **/
package com.t_oster.visicut.gui.parameterpanel;

import com.t_oster.uicomponents.parameter.Parameter;
import com.t_oster.visicut.VisicutModel;
import com.t_oster.visicut.gui.MainView;
import com.t_oster.visicut.model.PlfPart;
import com.t_oster.uicomponents.parameter.ParameterTableModel;
import com.t_oster.visicut.model.graphicelements.psvgsupport.ParametricPlfPart;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Map;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Thomas Oster <thomas.oster@rwth-aachen.de>
 */
public class ParameterPanel extends javax.swing.JPanel
{

  private ParameterTableModel model = new ParameterTableModel();

  /**
   * Creates new form ParameterPanel
   */
  public ParameterPanel()
  {
    initComponents();
    this.parameterJTable1.setModel(model);
    VisicutModel.getInstance().addPropertyChangeListener(new PropertyChangeListener()
    {
      public void propertyChange(PropertyChangeEvent pce)
      {
        if (!ignoreChanges && VisicutModel.PROP_SELECTEDPART.equals(pce.getPropertyName()))
        {
          refresh();
        }
        else if (VisicutModel.PROP_PLF_PART_REMOVED.equals(pce.getPropertyName())|| VisicutModel.PROP_PLF_PART_UPDATED.equals(pce.getPropertyName()))
        {
          refresh();
        }
      }
    });
    this.model.addTableModelListener(new TableModelListener()
    {
      public void tableChanged(TableModelEvent tme)
      {
        if (!ignoreChanges)
        {
          applyParameters();
        }
      }
    });
  }
  private boolean ignoreChanges = false;

  private void applyParameters()
  {
    ignoreChanges = true;
    PlfPart p = VisicutModel.getInstance().getSelectedPart();
    if (p != null && p instanceof ParametricPlfPart)
    {
      try
      {
        ((ParametricPlfPart) p).applyParameters();
        VisicutModel.getInstance().firePartUpdated(p);
      }
      catch (Exception e)
      {
        MainView.getInstance().getDialog().showErrorMessage(e);
      }
    }
    ignoreChanges = false;
  }

  public void refresh()
  {
    ignoreChanges = true;
    PlfPart p = VisicutModel.getInstance().getSelectedPart();
    if (p != null && p instanceof ParametricPlfPart)
    {
      Map<String, Parameter> params = ((ParametricPlfPart) p).getParameters();
      model.setParameterMap(params);
    }
    else
    {
      model.setParameterMap(null);
    }
    ignoreChanges = false;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jScrollPane2 = new javax.swing.JScrollPane();
    parameterJTable1 = new com.t_oster.uicomponents.parameter.ParameterJTable();

    parameterJTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String []
      {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane2.setViewportView(parameterJTable1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane2;
  private com.t_oster.uicomponents.parameter.ParameterJTable parameterJTable1;
  // End of variables declaration//GEN-END:variables
}
